@viewModel BcsAnalysisWeb.ViewModels.DefaultViewModel, BcsAnalysisWeb

<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <dot:RequiredResource Name="Site" />
    <meta charset="utf-8" />
    <title></title>
</head>
<body>
    <dot:InlineScript Dependencies="knockout">
        ko.bindingHandlers.htmlLazy = {
            update: function (element, valueAccessor) {
                var value = ko.unwrap(valueAccessor());

                if (!element.isContentEditable) {
                    element.innerHTML = value;
                }
            }
        };
        ko.bindingHandlers.contentEditable = {
            init: function (element, valueAccessor, allBindingsAccessor) {
                var value = ko.unwrap(valueAccessor()),
                    htmlLazy = allBindingsAccessor().htmlLazy;

                $(element).on("input", function () {
                    if (this.isContentEditable && ko.isWriteableObservable(htmlLazy)) {
                        htmlLazy(this.innerHTML);
                    }
                });
            },
            update: function (element, valueAccessor) {
                var value = ko.unwrap(valueAccessor());

                element.contentEditable = value;

                if (!element.isContentEditable) {
                    $(element).trigger("input");
                }
            }
        };
    </dot:InlineScript>
    <h1>
        <dot:Literal Text="{value: Title}" />
    </h1>
    <dot:Repeater class="reaction-list" WrapperTagName="ul" DataSource="{value: Reactions}">
        <ItemTemplate>
            <li>
                {{value: Display}}
                <dot:Button class="btn" Click="{command: _root.DrawTree(Id)}" Text="Draw syntax tree" />
                <dot:Button class="btn" Click="{command: _root.DrawSemanticTree(Id)}" Text="Draw semantic tree" />
            </li>
        </ItemTemplate>
    </dot:Repeater>

    <dot:TextBox Text="{value: TextEdit}" Changed="{command: DrawLive()}" />

    <div contenteditable="true"
         data-bind="contentEditable: true, htmlLazy: TextEdit"
         onkeyup="if(!dotvvm.isViewModelUpdating){dotvvm.postbackScript('DrawLive()')('root', this, [], '', true, '$root', null, null)};return false;">
        <span style="color:blue;"><span style="color:aqua">bbb</span>::aaa</span>::<span style="color:green;">cyt</span>
    </div>

    <cc:Tree class="tree"
             DataSource="{value: SyntaxToDraw}"
             NodeCollectionWrapperTag="ul"
             NodeWrapperTag="li"
             RenderSettings.Mode="Server"
             PostBack.Update="true">
        <ItemTemplate>
            <a class="{value: Data.HasErrors ? "error":""}" href="#">
                <h4>{{value: Data.NodeName}}</h4>
                {{value: Data.Dispaly}}
                <dot:Button Click="{command: _root.Click(_this)}" Text="Add" />
                <dot:Repeater class="error-list" WrapperTagName="ul" DataSource="{value: Data.Errors}">
                    <li>
                        {{value: _this}}
                    </li>
                </dot:Repeater>
            </a>
        </ItemTemplate>
    </cc:Tree>

    <cc:Tree class="tree"
             DataSource="{value: SemanticToDraw}"
             NodeCollectionWrapperTag="ul"
             NodeWrapperTag="li"
             RenderSettings.Mode="Server"
             PostBack.Update="true">
        <ItemTemplate>
            <a href="#">
                <h4>{{value: Data.Type}}</h4>
                Syntax: {{value: Data.SyntaxNode}} <br />
                Symbol: {{value: Data.Symbol}} <br />
            </a>
        </ItemTemplate>
    </cc:Tree>
</body>
</html>